// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vm.proto

package vm_grpc

import (
	context "context"
	fmt "fmt"
	types_grpc "github.com/dfinance/dvm-proto/go/types_grpc"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LcsType int32

const (
	LcsType_LcsBool    LcsType = 0
	LcsType_LcsU64     LcsType = 1
	LcsType_LcsVector  LcsType = 2
	LcsType_LcsAddress LcsType = 3
	LcsType_LcsU8      LcsType = 4
	LcsType_LcsU128    LcsType = 5
	LcsType_LcsSigner  LcsType = 6
	LcsType_LcsStruct  LcsType = 7
)

var LcsType_name = map[int32]string{
	0: "LcsBool",
	1: "LcsU64",
	2: "LcsVector",
	3: "LcsAddress",
	4: "LcsU8",
	5: "LcsU128",
	6: "LcsSigner",
	7: "LcsStruct",
}

var LcsType_value = map[string]int32{
	"LcsBool":    0,
	"LcsU64":     1,
	"LcsVector":  2,
	"LcsAddress": 3,
	"LcsU8":      4,
	"LcsU128":    5,
	"LcsSigner":  6,
	"LcsStruct":  7,
}

func (x LcsType) String() string {
	return proto.EnumName(LcsType_name, int32(x))
}

func (LcsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{0}
}

// Write set operation type.
type VmWriteOp int32

const (
	VmWriteOp_Value    VmWriteOp = 0
	VmWriteOp_Deletion VmWriteOp = 1
)

var VmWriteOp_name = map[int32]string{
	0: "Value",
	1: "Deletion",
}

var VmWriteOp_value = map[string]int32{
	"Value":    0,
	"Deletion": 1,
}

func (x VmWriteOp) String() string {
	return proto.EnumName(VmWriteOp_name, int32(x))
}

func (VmWriteOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{1}
}

// An `AbortLocation` specifies where a Move program `abort` occurred, either in a function in
// a module, or in a script.
type AbortLocation struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Module               string   `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AbortLocation) Reset()         { *m = AbortLocation{} }
func (m *AbortLocation) String() string { return proto.CompactTextString(m) }
func (*AbortLocation) ProtoMessage()    {}
func (*AbortLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{0}
}

func (m *AbortLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbortLocation.Unmarshal(m, b)
}
func (m *AbortLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbortLocation.Marshal(b, m, deterministic)
}
func (m *AbortLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbortLocation.Merge(m, src)
}
func (m *AbortLocation) XXX_Size() int {
	return xxx_messageInfo_AbortLocation.Size(m)
}
func (m *AbortLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_AbortLocation.DiscardUnknown(m)
}

var xxx_messageInfo_AbortLocation proto.InternalMessageInfo

func (m *AbortLocation) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *AbortLocation) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

// Function location.
type FunctionLoc struct {
	Function             uint64   `protobuf:"varint,1,opt,name=function,proto3" json:"function,omitempty"`
	CodeOffset           uint64   `protobuf:"varint,2,opt,name=code_offset,json=codeOffset,proto3" json:"code_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionLoc) Reset()         { *m = FunctionLoc{} }
func (m *FunctionLoc) String() string { return proto.CompactTextString(m) }
func (*FunctionLoc) ProtoMessage()    {}
func (*FunctionLoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{1}
}

func (m *FunctionLoc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionLoc.Unmarshal(m, b)
}
func (m *FunctionLoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionLoc.Marshal(b, m, deterministic)
}
func (m *FunctionLoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionLoc.Merge(m, src)
}
func (m *FunctionLoc) XXX_Size() int {
	return xxx_messageInfo_FunctionLoc.Size(m)
}
func (m *FunctionLoc) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionLoc.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionLoc proto.InternalMessageInfo

func (m *FunctionLoc) GetFunction() uint64 {
	if m != nil {
		return m.Function
	}
	return 0
}

func (m *FunctionLoc) GetCodeOffset() uint64 {
	if m != nil {
		return m.CodeOffset
	}
	return 0
}

// VmStatus `Error` case.
type MoveError struct {
	// Status code.
	StatusCode           uint64   `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveError) Reset()         { *m = MoveError{} }
func (m *MoveError) String() string { return proto.CompactTextString(m) }
func (*MoveError) ProtoMessage()    {}
func (*MoveError) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{2}
}

func (m *MoveError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveError.Unmarshal(m, b)
}
func (m *MoveError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveError.Marshal(b, m, deterministic)
}
func (m *MoveError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveError.Merge(m, src)
}
func (m *MoveError) XXX_Size() int {
	return xxx_messageInfo_MoveError.Size(m)
}
func (m *MoveError) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveError.DiscardUnknown(m)
}

var xxx_messageInfo_MoveError proto.InternalMessageInfo

func (m *MoveError) GetStatusCode() uint64 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

// VmStatus `MoveAbort` case.
type Abort struct {
	// Abort location. (optional). Null if abort occurred in the script.
	AbortLocation *AbortLocation `protobuf:"bytes,1,opt,name=abort_location,json=abortLocation,proto3" json:"abort_location,omitempty"`
	// Abort code.
	AbortCode            uint64   `protobuf:"varint,2,opt,name=abort_code,json=abortCode,proto3" json:"abort_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Abort) Reset()         { *m = Abort{} }
func (m *Abort) String() string { return proto.CompactTextString(m) }
func (*Abort) ProtoMessage()    {}
func (*Abort) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{3}
}

func (m *Abort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Abort.Unmarshal(m, b)
}
func (m *Abort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Abort.Marshal(b, m, deterministic)
}
func (m *Abort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Abort.Merge(m, src)
}
func (m *Abort) XXX_Size() int {
	return xxx_messageInfo_Abort.Size(m)
}
func (m *Abort) XXX_DiscardUnknown() {
	xxx_messageInfo_Abort.DiscardUnknown(m)
}

var xxx_messageInfo_Abort proto.InternalMessageInfo

func (m *Abort) GetAbortLocation() *AbortLocation {
	if m != nil {
		return m.AbortLocation
	}
	return nil
}

func (m *Abort) GetAbortCode() uint64 {
	if m != nil {
		return m.AbortCode
	}
	return 0
}

// VmStatus `ExecutionFailure` case.
type Failure struct {
	// Status code.
	StatusCode uint64 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// Abort location. (optional). Null if abort occurred in the script.
	AbortLocation *AbortLocation `protobuf:"bytes,2,opt,name=abort_location,json=abortLocation,proto3" json:"abort_location,omitempty"`
	// Function location.
	FunctionLoc          *FunctionLoc `protobuf:"bytes,3,opt,name=function_loc,json=functionLoc,proto3" json:"function_loc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Failure) Reset()         { *m = Failure{} }
func (m *Failure) String() string { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()    {}
func (*Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{4}
}

func (m *Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure.Unmarshal(m, b)
}
func (m *Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure.Marshal(b, m, deterministic)
}
func (m *Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure.Merge(m, src)
}
func (m *Failure) XXX_Size() int {
	return xxx_messageInfo_Failure.Size(m)
}
func (m *Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_Failure proto.InternalMessageInfo

func (m *Failure) GetStatusCode() uint64 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Failure) GetAbortLocation() *AbortLocation {
	if m != nil {
		return m.AbortLocation
	}
	return nil
}

func (m *Failure) GetFunctionLoc() *FunctionLoc {
	if m != nil {
		return m.FunctionLoc
	}
	return nil
}

/// Message.
type Message struct {
	// Message with error details if needed.
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{5}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// A `VMStatus` is represented as either
// - `Null` indicating successful execution.
// - `Error` indicating an error from the VM itself.
// - `MoveAbort` indicating an `abort` ocurred inside of a Move program
// - `ExecutionFailure` indicating an runtime error.
type VMStatus struct {
	// Types that are valid to be assigned to Error:
	//	*VMStatus_MoveError
	//	*VMStatus_Abort
	//	*VMStatus_ExecutionFailure
	Error isVMStatus_Error `protobuf_oneof:"error"`
	// Message with error details if needed (optional).
	Message              *Message `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMStatus) Reset()         { *m = VMStatus{} }
func (m *VMStatus) String() string { return proto.CompactTextString(m) }
func (*VMStatus) ProtoMessage()    {}
func (*VMStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{6}
}

func (m *VMStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMStatus.Unmarshal(m, b)
}
func (m *VMStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMStatus.Marshal(b, m, deterministic)
}
func (m *VMStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMStatus.Merge(m, src)
}
func (m *VMStatus) XXX_Size() int {
	return xxx_messageInfo_VMStatus.Size(m)
}
func (m *VMStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_VMStatus.DiscardUnknown(m)
}

var xxx_messageInfo_VMStatus proto.InternalMessageInfo

type isVMStatus_Error interface {
	isVMStatus_Error()
}

type VMStatus_MoveError struct {
	MoveError *MoveError `protobuf:"bytes,1,opt,name=move_error,json=moveError,proto3,oneof"`
}

type VMStatus_Abort struct {
	Abort *Abort `protobuf:"bytes,2,opt,name=abort,proto3,oneof"`
}

type VMStatus_ExecutionFailure struct {
	ExecutionFailure *Failure `protobuf:"bytes,3,opt,name=execution_failure,json=executionFailure,proto3,oneof"`
}

func (*VMStatus_MoveError) isVMStatus_Error() {}

func (*VMStatus_Abort) isVMStatus_Error() {}

func (*VMStatus_ExecutionFailure) isVMStatus_Error() {}

func (m *VMStatus) GetError() isVMStatus_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *VMStatus) GetMoveError() *MoveError {
	if x, ok := m.GetError().(*VMStatus_MoveError); ok {
		return x.MoveError
	}
	return nil
}

func (m *VMStatus) GetAbort() *Abort {
	if x, ok := m.GetError().(*VMStatus_Abort); ok {
		return x.Abort
	}
	return nil
}

func (m *VMStatus) GetExecutionFailure() *Failure {
	if x, ok := m.GetError().(*VMStatus_ExecutionFailure); ok {
		return x.ExecutionFailure
	}
	return nil
}

func (m *VMStatus) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*VMStatus) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*VMStatus_MoveError)(nil),
		(*VMStatus_Abort)(nil),
		(*VMStatus_ExecutionFailure)(nil),
	}
}

/// Full name of the structure.
type StructIdent struct {
	Address              []byte    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Module               string    `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Name                 string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TypeParams           []*LcsTag `protobuf:"bytes,4,rep,name=type_params,json=typeParams,proto3" json:"type_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StructIdent) Reset()         { *m = StructIdent{} }
func (m *StructIdent) String() string { return proto.CompactTextString(m) }
func (*StructIdent) ProtoMessage()    {}
func (*StructIdent) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{7}
}

func (m *StructIdent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructIdent.Unmarshal(m, b)
}
func (m *StructIdent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructIdent.Marshal(b, m, deterministic)
}
func (m *StructIdent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructIdent.Merge(m, src)
}
func (m *StructIdent) XXX_Size() int {
	return xxx_messageInfo_StructIdent.Size(m)
}
func (m *StructIdent) XXX_DiscardUnknown() {
	xxx_messageInfo_StructIdent.DiscardUnknown(m)
}

var xxx_messageInfo_StructIdent proto.InternalMessageInfo

func (m *StructIdent) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *StructIdent) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *StructIdent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StructIdent) GetTypeParams() []*LcsTag {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

type LcsTag struct {
	TypeTag              LcsType      `protobuf:"varint,1,opt,name=type_tag,json=typeTag,proto3,enum=vm_grpc.LcsType" json:"type_tag,omitempty"`
	VectorType           *LcsTag      `protobuf:"bytes,2,opt,name=vector_type,json=vectorType,proto3" json:"vector_type,omitempty"`
	StructIdent          *StructIdent `protobuf:"bytes,3,opt,name=struct_ident,json=structIdent,proto3" json:"struct_ident,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LcsTag) Reset()         { *m = LcsTag{} }
func (m *LcsTag) String() string { return proto.CompactTextString(m) }
func (*LcsTag) ProtoMessage()    {}
func (*LcsTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{8}
}

func (m *LcsTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LcsTag.Unmarshal(m, b)
}
func (m *LcsTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LcsTag.Marshal(b, m, deterministic)
}
func (m *LcsTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LcsTag.Merge(m, src)
}
func (m *LcsTag) XXX_Size() int {
	return xxx_messageInfo_LcsTag.Size(m)
}
func (m *LcsTag) XXX_DiscardUnknown() {
	xxx_messageInfo_LcsTag.DiscardUnknown(m)
}

var xxx_messageInfo_LcsTag proto.InternalMessageInfo

func (m *LcsTag) GetTypeTag() LcsType {
	if m != nil {
		return m.TypeTag
	}
	return LcsType_LcsBool
}

func (m *LcsTag) GetVectorType() *LcsTag {
	if m != nil {
		return m.VectorType
	}
	return nil
}

func (m *LcsTag) GetStructIdent() *StructIdent {
	if m != nil {
		return m.StructIdent
	}
	return nil
}

/// Module identifier.
type ModuleIdent struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleIdent) Reset()         { *m = ModuleIdent{} }
func (m *ModuleIdent) String() string { return proto.CompactTextString(m) }
func (*ModuleIdent) ProtoMessage()    {}
func (*ModuleIdent) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{9}
}

func (m *ModuleIdent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModuleIdent.Unmarshal(m, b)
}
func (m *ModuleIdent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModuleIdent.Marshal(b, m, deterministic)
}
func (m *ModuleIdent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleIdent.Merge(m, src)
}
func (m *ModuleIdent) XXX_Size() int {
	return xxx_messageInfo_ModuleIdent.Size(m)
}
func (m *ModuleIdent) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleIdent.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleIdent proto.InternalMessageInfo

func (m *ModuleIdent) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ModuleIdent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// VM event returns after contract execution.
type VMEvent struct {
	SenderAddress        []byte       `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	SenderModule         *ModuleIdent `protobuf:"bytes,2,opt,name=sender_module,json=senderModule,proto3" json:"sender_module,omitempty"`
	EventType            *LcsTag      `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventData            []byte       `protobuf:"bytes,4,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *VMEvent) Reset()         { *m = VMEvent{} }
func (m *VMEvent) String() string { return proto.CompactTextString(m) }
func (*VMEvent) ProtoMessage()    {}
func (*VMEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{10}
}

func (m *VMEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMEvent.Unmarshal(m, b)
}
func (m *VMEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMEvent.Marshal(b, m, deterministic)
}
func (m *VMEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMEvent.Merge(m, src)
}
func (m *VMEvent) XXX_Size() int {
	return xxx_messageInfo_VMEvent.Size(m)
}
func (m *VMEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_VMEvent.DiscardUnknown(m)
}

var xxx_messageInfo_VMEvent proto.InternalMessageInfo

func (m *VMEvent) GetSenderAddress() []byte {
	if m != nil {
		return m.SenderAddress
	}
	return nil
}

func (m *VMEvent) GetSenderModule() *ModuleIdent {
	if m != nil {
		return m.SenderModule
	}
	return nil
}

func (m *VMEvent) GetEventType() *LcsTag {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (m *VMEvent) GetEventData() []byte {
	if m != nil {
		return m.EventData
	}
	return nil
}

// Storage path
type VMAccessPath struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Path                 []byte   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMAccessPath) Reset()         { *m = VMAccessPath{} }
func (m *VMAccessPath) String() string { return proto.CompactTextString(m) }
func (*VMAccessPath) ProtoMessage()    {}
func (*VMAccessPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{11}
}

func (m *VMAccessPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMAccessPath.Unmarshal(m, b)
}
func (m *VMAccessPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMAccessPath.Marshal(b, m, deterministic)
}
func (m *VMAccessPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMAccessPath.Merge(m, src)
}
func (m *VMAccessPath) XXX_Size() int {
	return xxx_messageInfo_VMAccessPath.Size(m)
}
func (m *VMAccessPath) XXX_DiscardUnknown() {
	xxx_messageInfo_VMAccessPath.DiscardUnknown(m)
}

var xxx_messageInfo_VMAccessPath proto.InternalMessageInfo

func (m *VMAccessPath) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *VMAccessPath) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

// VM value should be passed before execution and return after execution (with opcodes), write_set in nutshell.
type VMValue struct {
	Type                 VmWriteOp     `protobuf:"varint,2,opt,name=type,proto3,enum=vm_grpc.VmWriteOp" json:"type,omitempty"`
	Value                []byte        `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Path                 *VMAccessPath `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VMValue) Reset()         { *m = VMValue{} }
func (m *VMValue) String() string { return proto.CompactTextString(m) }
func (*VMValue) ProtoMessage()    {}
func (*VMValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{12}
}

func (m *VMValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMValue.Unmarshal(m, b)
}
func (m *VMValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMValue.Marshal(b, m, deterministic)
}
func (m *VMValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMValue.Merge(m, src)
}
func (m *VMValue) XXX_Size() int {
	return xxx_messageInfo_VMValue.Size(m)
}
func (m *VMValue) XXX_DiscardUnknown() {
	xxx_messageInfo_VMValue.DiscardUnknown(m)
}

var xxx_messageInfo_VMValue proto.InternalMessageInfo

func (m *VMValue) GetType() VmWriteOp {
	if m != nil {
		return m.Type
	}
	return VmWriteOp_Value
}

func (m *VMValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *VMValue) GetPath() *VMAccessPath {
	if m != nil {
		return m.Path
	}
	return nil
}

// Contract arguments.
type VMArgs struct {
	Type                 types_grpc.VMTypeTag `protobuf:"varint,1,opt,name=type,proto3,enum=types.VMTypeTag" json:"type,omitempty"`
	Value                []byte               `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VMArgs) Reset()         { *m = VMArgs{} }
func (m *VMArgs) String() string { return proto.CompactTextString(m) }
func (*VMArgs) ProtoMessage()    {}
func (*VMArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{13}
}

func (m *VMArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMArgs.Unmarshal(m, b)
}
func (m *VMArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMArgs.Marshal(b, m, deterministic)
}
func (m *VMArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMArgs.Merge(m, src)
}
func (m *VMArgs) XXX_Size() int {
	return xxx_messageInfo_VMArgs.Size(m)
}
func (m *VMArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_VMArgs.DiscardUnknown(m)
}

var xxx_messageInfo_VMArgs proto.InternalMessageInfo

func (m *VMArgs) GetType() types_grpc.VMTypeTag {
	if m != nil {
		return m.Type
	}
	return types_grpc.VMTypeTag_Bool
}

func (m *VMArgs) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// Publish module.
type VMPublishModule struct {
	Sender               []byte   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxGasAmount         uint64   `protobuf:"varint,2,opt,name=max_gas_amount,json=maxGasAmount,proto3" json:"max_gas_amount,omitempty"`
	GasUnitPrice         uint64   `protobuf:"varint,3,opt,name=gas_unit_price,json=gasUnitPrice,proto3" json:"gas_unit_price,omitempty"`
	Code                 []byte   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMPublishModule) Reset()         { *m = VMPublishModule{} }
func (m *VMPublishModule) String() string { return proto.CompactTextString(m) }
func (*VMPublishModule) ProtoMessage()    {}
func (*VMPublishModule) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{14}
}

func (m *VMPublishModule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMPublishModule.Unmarshal(m, b)
}
func (m *VMPublishModule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMPublishModule.Marshal(b, m, deterministic)
}
func (m *VMPublishModule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMPublishModule.Merge(m, src)
}
func (m *VMPublishModule) XXX_Size() int {
	return xxx_messageInfo_VMPublishModule.Size(m)
}
func (m *VMPublishModule) XXX_DiscardUnknown() {
	xxx_messageInfo_VMPublishModule.DiscardUnknown(m)
}

var xxx_messageInfo_VMPublishModule proto.InternalMessageInfo

func (m *VMPublishModule) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *VMPublishModule) GetMaxGasAmount() uint64 {
	if m != nil {
		return m.MaxGasAmount
	}
	return 0
}

func (m *VMPublishModule) GetGasUnitPrice() uint64 {
	if m != nil {
		return m.GasUnitPrice
	}
	return 0
}

func (m *VMPublishModule) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

// VM contract object to process.
type VMExecuteScript struct {
	Senders              [][]byte       `protobuf:"bytes,1,rep,name=senders,proto3" json:"senders,omitempty"`
	MaxGasAmount         uint64         `protobuf:"varint,2,opt,name=max_gas_amount,json=maxGasAmount,proto3" json:"max_gas_amount,omitempty"`
	GasUnitPrice         uint64         `protobuf:"varint,3,opt,name=gas_unit_price,json=gasUnitPrice,proto3" json:"gas_unit_price,omitempty"`
	Code                 []byte         `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	TypeParams           []*StructIdent `protobuf:"bytes,5,rep,name=type_params,json=typeParams,proto3" json:"type_params,omitempty"`
	Args                 []*VMArgs      `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VMExecuteScript) Reset()         { *m = VMExecuteScript{} }
func (m *VMExecuteScript) String() string { return proto.CompactTextString(m) }
func (*VMExecuteScript) ProtoMessage()    {}
func (*VMExecuteScript) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{15}
}

func (m *VMExecuteScript) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMExecuteScript.Unmarshal(m, b)
}
func (m *VMExecuteScript) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMExecuteScript.Marshal(b, m, deterministic)
}
func (m *VMExecuteScript) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMExecuteScript.Merge(m, src)
}
func (m *VMExecuteScript) XXX_Size() int {
	return xxx_messageInfo_VMExecuteScript.Size(m)
}
func (m *VMExecuteScript) XXX_DiscardUnknown() {
	xxx_messageInfo_VMExecuteScript.DiscardUnknown(m)
}

var xxx_messageInfo_VMExecuteScript proto.InternalMessageInfo

func (m *VMExecuteScript) GetSenders() [][]byte {
	if m != nil {
		return m.Senders
	}
	return nil
}

func (m *VMExecuteScript) GetMaxGasAmount() uint64 {
	if m != nil {
		return m.MaxGasAmount
	}
	return 0
}

func (m *VMExecuteScript) GetGasUnitPrice() uint64 {
	if m != nil {
		return m.GasUnitPrice
	}
	return 0
}

func (m *VMExecuteScript) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *VMExecuteScript) GetTypeParams() []*StructIdent {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

func (m *VMExecuteScript) GetArgs() []*VMArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

// Response from VM contains write_set, events, gas used and status for specific contract.
type VMExecuteResponse struct {
	WriteSet             []*VMValue `protobuf:"bytes,1,rep,name=write_set,json=writeSet,proto3" json:"write_set,omitempty"`
	Events               []*VMEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	GasUsed              uint64     `protobuf:"varint,3,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Status               *VMStatus  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VMExecuteResponse) Reset()         { *m = VMExecuteResponse{} }
func (m *VMExecuteResponse) String() string { return proto.CompactTextString(m) }
func (*VMExecuteResponse) ProtoMessage()    {}
func (*VMExecuteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{16}
}

func (m *VMExecuteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMExecuteResponse.Unmarshal(m, b)
}
func (m *VMExecuteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMExecuteResponse.Marshal(b, m, deterministic)
}
func (m *VMExecuteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMExecuteResponse.Merge(m, src)
}
func (m *VMExecuteResponse) XXX_Size() int {
	return xxx_messageInfo_VMExecuteResponse.Size(m)
}
func (m *VMExecuteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VMExecuteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VMExecuteResponse proto.InternalMessageInfo

func (m *VMExecuteResponse) GetWriteSet() []*VMValue {
	if m != nil {
		return m.WriteSet
	}
	return nil
}

func (m *VMExecuteResponse) GetEvents() []*VMEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *VMExecuteResponse) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *VMExecuteResponse) GetStatus() *VMStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// Compiled source.
type CompiledUnit struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Bytecode             []byte   `protobuf:"bytes,2,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompiledUnit) Reset()         { *m = CompiledUnit{} }
func (m *CompiledUnit) String() string { return proto.CompactTextString(m) }
func (*CompiledUnit) ProtoMessage()    {}
func (*CompiledUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{17}
}

func (m *CompiledUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompiledUnit.Unmarshal(m, b)
}
func (m *CompiledUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompiledUnit.Marshal(b, m, deterministic)
}
func (m *CompiledUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompiledUnit.Merge(m, src)
}
func (m *CompiledUnit) XXX_Size() int {
	return xxx_messageInfo_CompiledUnit.Size(m)
}
func (m *CompiledUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_CompiledUnit.DiscardUnknown(m)
}

var xxx_messageInfo_CompiledUnit proto.InternalMessageInfo

func (m *CompiledUnit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompiledUnit) GetBytecode() []byte {
	if m != nil {
		return m.Bytecode
	}
	return nil
}

type MultipleCompilationResult struct {
	Units                []*CompiledUnit `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
	Errors               []string        `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MultipleCompilationResult) Reset()         { *m = MultipleCompilationResult{} }
func (m *MultipleCompilationResult) String() string { return proto.CompactTextString(m) }
func (*MultipleCompilationResult) ProtoMessage()    {}
func (*MultipleCompilationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{18}
}

func (m *MultipleCompilationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleCompilationResult.Unmarshal(m, b)
}
func (m *MultipleCompilationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleCompilationResult.Marshal(b, m, deterministic)
}
func (m *MultipleCompilationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleCompilationResult.Merge(m, src)
}
func (m *MultipleCompilationResult) XXX_Size() int {
	return xxx_messageInfo_MultipleCompilationResult.Size(m)
}
func (m *MultipleCompilationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleCompilationResult.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleCompilationResult proto.InternalMessageInfo

func (m *MultipleCompilationResult) GetUnits() []*CompiledUnit {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *MultipleCompilationResult) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterEnum("vm_grpc.LcsType", LcsType_name, LcsType_value)
	proto.RegisterEnum("vm_grpc.VmWriteOp", VmWriteOp_name, VmWriteOp_value)
	proto.RegisterType((*AbortLocation)(nil), "vm_grpc.AbortLocation")
	proto.RegisterType((*FunctionLoc)(nil), "vm_grpc.FunctionLoc")
	proto.RegisterType((*MoveError)(nil), "vm_grpc.MoveError")
	proto.RegisterType((*Abort)(nil), "vm_grpc.Abort")
	proto.RegisterType((*Failure)(nil), "vm_grpc.Failure")
	proto.RegisterType((*Message)(nil), "vm_grpc.Message")
	proto.RegisterType((*VMStatus)(nil), "vm_grpc.VMStatus")
	proto.RegisterType((*StructIdent)(nil), "vm_grpc.StructIdent")
	proto.RegisterType((*LcsTag)(nil), "vm_grpc.LcsTag")
	proto.RegisterType((*ModuleIdent)(nil), "vm_grpc.ModuleIdent")
	proto.RegisterType((*VMEvent)(nil), "vm_grpc.VMEvent")
	proto.RegisterType((*VMAccessPath)(nil), "vm_grpc.VMAccessPath")
	proto.RegisterType((*VMValue)(nil), "vm_grpc.VMValue")
	proto.RegisterType((*VMArgs)(nil), "vm_grpc.VMArgs")
	proto.RegisterType((*VMPublishModule)(nil), "vm_grpc.VMPublishModule")
	proto.RegisterType((*VMExecuteScript)(nil), "vm_grpc.VMExecuteScript")
	proto.RegisterType((*VMExecuteResponse)(nil), "vm_grpc.VMExecuteResponse")
	proto.RegisterType((*CompiledUnit)(nil), "vm_grpc.CompiledUnit")
	proto.RegisterType((*MultipleCompilationResult)(nil), "vm_grpc.MultipleCompilationResult")
}

func init() {
	proto.RegisterFile("vm.proto", fileDescriptor_cab246c8c7c5372d)
}

var fileDescriptor_cab246c8c7c5372d = []byte{
	// 1123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcb, 0x6e, 0xdb, 0x46,
	0x14, 0x15, 0x65, 0xbd, 0x78, 0x25, 0x2b, 0xf4, 0x20, 0x35, 0x14, 0x03, 0x46, 0x0d, 0xd6, 0x0d,
	0x1c, 0xa7, 0x31, 0x52, 0xa7, 0x8f, 0x14, 0x7d, 0x41, 0x89, 0x9d, 0xb8, 0x85, 0x85, 0x18, 0xe3,
	0x58, 0x5d, 0xb4, 0x00, 0x3b, 0xa6, 0xc6, 0x32, 0x01, 0x91, 0x43, 0x70, 0x86, 0x8a, 0xfd, 0x01,
	0x5d, 0xf4, 0x2f, 0x8a, 0x7e, 0x42, 0x97, 0xfd, 0x97, 0xae, 0xfb, 0x1b, 0xc5, 0xdc, 0x19, 0x51,
	0x94, 0x6c, 0xa4, 0xc8, 0x22, 0x3b, 0xde, 0x3b, 0xf7, 0x75, 0xce, 0x7d, 0x48, 0xd0, 0x9a, 0xc6,
	0x7b, 0x69, 0x26, 0x94, 0x20, 0xcd, 0x69, 0x1c, 0x8c, 0xb3, 0x34, 0xdc, 0x20, 0xa1, 0x88, 0x63,
	0x91, 0x3c, 0x52, 0xd7, 0x29, 0x97, 0xe6, 0xd1, 0xef, 0xc3, 0x6a, 0xff, 0x5c, 0x64, 0xea, 0x58,
	0x84, 0x4c, 0x45, 0x22, 0x21, 0x3d, 0x68, 0xb2, 0xd1, 0x28, 0xe3, 0x52, 0xf6, 0x9c, 0x2d, 0x67,
	0xa7, 0x43, 0x67, 0x22, 0x59, 0x87, 0x46, 0x2c, 0x46, 0xf9, 0x84, 0xf7, 0xaa, 0x5b, 0xce, 0x8e,
	0x4b, 0xad, 0xe4, 0xff, 0x08, 0xed, 0x17, 0x79, 0x12, 0x6a, 0xef, 0x63, 0x11, 0x92, 0x0d, 0x68,
	0x5d, 0x58, 0x11, 0x23, 0xd4, 0x68, 0x21, 0x93, 0x0f, 0xa1, 0x1d, 0x8a, 0x11, 0x0f, 0xc4, 0xc5,
	0x85, 0xe4, 0x0a, 0xe3, 0xd4, 0x28, 0x68, 0xd5, 0x2b, 0xd4, 0xf8, 0x9f, 0x80, 0x3b, 0x10, 0x53,
	0x7e, 0x98, 0x65, 0x22, 0xd3, 0xd6, 0x52, 0x31, 0x95, 0xcb, 0x40, 0x5b, 0xcc, 0xac, 0x8d, 0xea,
	0xb9, 0x18, 0x71, 0x9f, 0x43, 0x1d, 0x8b, 0x27, 0xdf, 0x42, 0x97, 0xe9, 0x8f, 0x60, 0x62, 0x61,
	0x60, 0xe6, 0xf6, 0xfe, 0xfa, 0x9e, 0xc5, 0xbe, 0xb7, 0x00, 0x92, 0xae, 0xb2, 0x05, 0xcc, 0x9b,
	0x00, 0xc6, 0xbd, 0x94, 0xc7, 0x45, 0x0d, 0xa6, 0xf9, 0xd3, 0x81, 0xe6, 0x0b, 0x16, 0x4d, 0xf2,
	0x8c, 0x2f, 0xd7, 0xe4, 0x2c, 0xd7, 0x74, 0x4b, 0x29, 0xd5, 0x77, 0x29, 0xe5, 0x4b, 0xe8, 0xcc,
	0xd8, 0xd2, 0x11, 0x7a, 0x2b, 0xe8, 0x7c, 0xb7, 0x70, 0x2e, 0x31, 0x4d, 0xdb, 0x17, 0x73, 0xc1,
	0xdf, 0x84, 0xe6, 0x80, 0x4b, 0xc9, 0xc6, 0x9c, 0x10, 0xa8, 0x29, 0x7e, 0xa5, 0xb0, 0x38, 0x97,
	0xe2, 0xb7, 0xff, 0x8f, 0x03, 0xad, 0xe1, 0xe0, 0x14, 0xeb, 0x24, 0x4f, 0x00, 0x62, 0x31, 0xe5,
	0x01, 0xd7, 0x34, 0x5b, 0xaa, 0x48, 0x91, 0xa2, 0x68, 0xc0, 0x51, 0x85, 0xba, 0x71, 0xd1, 0x8d,
	0xfb, 0x50, 0xc7, 0x52, 0x2d, 0x9e, 0xee, 0x22, 0x9e, 0xa3, 0x0a, 0x35, 0xcf, 0xe4, 0x7b, 0x58,
	0xe3, 0x57, 0x3c, 0xcc, 0x11, 0xc2, 0x85, 0xa1, 0xcd, 0xc2, 0xf0, 0xe6, 0x30, 0x8c, 0xfe, 0xa8,
	0x42, 0xbd, 0xc2, 0x78, 0x46, 0xf1, 0x2e, 0x34, 0x63, 0x83, 0xa4, 0x57, 0x5b, 0x72, 0xb3, 0x08,
	0xe9, 0xcc, 0xe0, 0x59, 0x13, 0xea, 0x08, 0xc2, 0xff, 0xcd, 0x81, 0xf6, 0xa9, 0xca, 0xf2, 0x50,
	0xfd, 0x30, 0xe2, 0x89, 0x7a, 0xf7, 0x31, 0xd6, 0xac, 0x25, 0x2c, 0x36, 0xa5, 0xba, 0x14, 0xbf,
	0xc9, 0x63, 0x68, 0xeb, 0x65, 0x09, 0x52, 0x96, 0xb1, 0x58, 0xf6, 0x6a, 0x5b, 0x2b, 0x3b, 0xed,
	0xfd, 0x3b, 0x45, 0x39, 0xc7, 0xa1, 0x7c, 0xcd, 0xc6, 0x14, 0xb4, 0xcd, 0x09, 0x9a, 0xf8, 0x7f,
	0x38, 0xd0, 0x30, 0x6a, 0xf2, 0x10, 0x5a, 0xe8, 0xac, 0xd8, 0x18, 0x6b, 0xe8, 0x96, 0x80, 0x68,
	0x93, 0xeb, 0x94, 0xd3, 0xa6, 0xb6, 0xd0, 0xc6, 0x8f, 0xa1, 0x3d, 0xe5, 0xa1, 0x12, 0x59, 0xa0,
	0x35, 0x96, 0xe3, 0x9b, 0x99, 0x8c, 0x8d, 0x76, 0xd5, 0x93, 0x22, 0x11, 0x70, 0x10, 0x69, 0xc4,
	0x37, 0x26, 0xa5, 0xc4, 0x06, 0x6d, 0xcb, 0xb9, 0xe0, 0x7f, 0x0d, 0xed, 0x01, 0x42, 0xfe, 0x3f,
	0xa6, 0x66, 0x8c, 0x54, 0xe7, 0x8c, 0xf8, 0x7f, 0x3b, 0xd0, 0x1c, 0x0e, 0x0e, 0xa7, 0xda, 0xf3,
	0x63, 0xe8, 0x4a, 0x9e, 0x8c, 0x78, 0x16, 0x2c, 0x06, 0x58, 0x35, 0xda, 0xbe, 0x0d, 0xf3, 0x15,
	0x58, 0x45, 0x50, 0xe2, 0xbd, 0x5c, 0x69, 0xa9, 0x1a, 0xda, 0x31, 0xa6, 0x46, 0x45, 0xf6, 0x00,
	0xb8, 0x4e, 0x65, 0x48, 0x59, 0xb9, 0x9d, 0x14, 0x17, 0x4d, 0x90, 0x93, 0xcd, 0x99, 0xfd, 0x88,
	0x29, 0x86, 0xd3, 0xd3, 0xb1, 0xcf, 0x07, 0x4c, 0x31, 0xff, 0x1b, 0xe8, 0x0c, 0x07, 0xfd, 0x30,
	0xe4, 0x52, 0x9e, 0x30, 0x75, 0xf9, 0x76, 0xe8, 0x29, 0x53, 0x97, 0x58, 0x6a, 0x87, 0xe2, 0xb7,
	0x9f, 0x69, 0xe4, 0x43, 0x36, 0xc9, 0x39, 0xb9, 0x0f, 0xb5, 0xa2, 0x4d, 0xdd, 0xd2, 0xea, 0x0c,
	0xe3, 0x9f, 0xb2, 0x48, 0xf1, 0x57, 0x29, 0xc5, 0x77, 0x72, 0x17, 0xea, 0x53, 0xed, 0x60, 0xc3,
	0x1b, 0x81, 0x3c, 0xb0, 0xc1, 0x0d, 0x9e, 0x0f, 0xe6, 0xde, 0xa5, 0xda, 0x6c, 0xce, 0x03, 0x68,
	0x0c, 0x07, 0xfd, 0x6c, 0x2c, 0xc9, 0xb6, 0x4d, 0x39, 0x9b, 0x24, 0x73, 0xc4, 0x87, 0x83, 0xd7,
	0x66, 0x80, 0x96, 0x13, 0x56, 0x4b, 0x09, 0xfd, 0xdf, 0x1d, 0xb8, 0x33, 0x1c, 0x9c, 0xe4, 0xe7,
	0x93, 0x48, 0x5e, 0x5a, 0x6a, 0xd7, 0xa1, 0x61, 0xa8, 0xb6, 0xb5, 0x59, 0x89, 0x6c, 0x43, 0x37,
	0x66, 0x57, 0xc1, 0x98, 0xc9, 0x80, 0xc5, 0x22, 0x4f, 0x66, 0x57, 0xba, 0x13, 0xb3, 0xab, 0x97,
	0x4c, 0xf6, 0x51, 0xa7, 0xad, 0xb4, 0x45, 0x9e, 0x44, 0x2a, 0x48, 0xb3, 0x28, 0x34, 0xcd, 0xa9,
	0xd1, 0xce, 0x98, 0xc9, 0xb3, 0x24, 0x52, 0x27, 0x5a, 0xa7, 0x59, 0xc4, 0x2b, 0x69, 0x1a, 0x81,
	0xdf, 0xfe, 0xbf, 0x58, 0xcb, 0x21, 0x2e, 0x3d, 0x3f, 0x0d, 0xb3, 0x28, 0xc5, 0x11, 0x34, 0xd9,
	0x75, 0x1f, 0x56, 0x74, 0x1f, 0xac, 0xf8, 0xbe, 0xab, 0x21, 0x9f, 0x2f, 0x2e, 0x78, 0x1d, 0x17,
	0xfc, 0xf6, 0x1d, 0x2a, 0x6d, 0x39, 0xf9, 0x08, 0x6a, 0x2c, 0x1b, 0xcb, 0x5e, 0x63, 0xe9, 0x20,
	0x98, 0x5e, 0x51, 0x7c, 0xf4, 0xff, 0x72, 0x60, 0xad, 0x40, 0x4a, 0xb9, 0x4c, 0x45, 0x22, 0x39,
	0x79, 0x04, 0xee, 0x1b, 0x3d, 0x23, 0x81, 0xfe, 0x01, 0x74, 0xd0, 0xdf, 0x2b, 0xf9, 0xe3, 0x7c,
	0xd1, 0x16, 0x9a, 0x9c, 0x72, 0x45, 0x76, 0xa0, 0x81, 0xf3, 0x2b, 0x7b, 0xd5, 0x1b, 0xb6, 0xb8,
	0x85, 0xd4, 0xbe, 0x93, 0x7b, 0xd0, 0x42, 0x12, 0x24, 0x1f, 0x59, 0xf8, 0x4d, 0x0d, 0x5f, 0xf2,
	0x11, 0x79, 0x00, 0x0d, 0xf3, 0x0b, 0x65, 0x0f, 0xea, 0x5a, 0x29, 0x88, 0xf9, 0x49, 0xa0, 0xd6,
	0xc0, 0xff, 0x0e, 0x3a, 0xcf, 0x45, 0x9c, 0x46, 0x13, 0x3e, 0xd2, 0xcc, 0x15, 0x37, 0xc0, 0x29,
	0x5d, 0xc5, 0x0d, 0x68, 0x9d, 0x5f, 0x2b, 0x5e, 0xfc, 0x58, 0x76, 0x68, 0x21, 0xfb, 0xbf, 0xc2,
	0xbd, 0x41, 0x3e, 0x51, 0x51, 0x3a, 0xe1, 0x26, 0x8e, 0xf9, 0x95, 0xe3, 0x32, 0x9f, 0x28, 0xf2,
	0x10, 0xea, 0xba, 0x47, 0xd2, 0xe2, 0x9e, 0x4f, 0x7e, 0x39, 0x25, 0x35, 0x36, 0x7a, 0x40, 0xf1,
	0xb4, 0x1b, 0xe4, 0x2e, 0xb5, 0xd2, 0xee, 0x1b, 0x68, 0xda, 0xeb, 0x49, 0xda, 0xf8, 0xf9, 0x4c,
	0x88, 0x89, 0x57, 0x21, 0x80, 0x87, 0xf7, 0xec, 0x8b, 0xcf, 0x3c, 0x87, 0xac, 0x82, 0x7b, 0x1c,
	0xca, 0x21, 0x1e, 0x4b, 0xaf, 0x4a, 0xba, 0x00, 0xc7, 0xa1, 0xb4, 0xf7, 0xc8, 0x5b, 0x21, 0x2e,
	0xd4, 0xb5, 0xe9, 0x53, 0xaf, 0x66, 0x43, 0x9c, 0x7d, 0xba, 0xff, 0xd4, 0xab, 0x5b, 0xb7, 0xd3,
	0x68, 0x9c, 0xf0, 0xcc, 0x6b, 0xcc, 0x44, 0x9c, 0x01, 0xaf, 0xb9, 0xbb, 0x0d, 0x6e, 0xb1, 0xdf,
	0x3a, 0x04, 0xb6, 0xca, 0xab, 0x90, 0x0e, 0xb4, 0x0e, 0xf8, 0x84, 0x6b, 0x9c, 0x9e, 0xb3, 0xff,
	0x8b, 0x6e, 0xba, 0xd9, 0x31, 0xbb, 0x70, 0x3c, 0x23, 0x2f, 0x61, 0x75, 0x71, 0xfb, 0x7a, 0xa5,
	0x0e, 0x2c, 0xbc, 0x6c, 0x6c, 0x94, 0x1b, 0xbc, 0x38, 0x3b, 0x7e, 0x65, 0xff, 0x67, 0xf0, 0x86,
	0x03, 0xb3, 0x35, 0xe6, 0x51, 0x60, 0xf0, 0xa5, 0x75, 0xba, 0x19, 0xc2, 0xbc, 0xbc, 0x3d, 0xf8,
	0x79, 0x03, 0xff, 0x12, 0x3e, 0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x77, 0xe4, 0x5b, 0xa4, 0x3b,
	0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VMModulePublisherClient is the client API for VMModulePublisher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VMModulePublisherClient interface {
	PublishModule(ctx context.Context, in *VMPublishModule, opts ...grpc.CallOption) (*VMExecuteResponse, error)
}

type vMModulePublisherClient struct {
	cc grpc.ClientConnInterface
}

func NewVMModulePublisherClient(cc grpc.ClientConnInterface) VMModulePublisherClient {
	return &vMModulePublisherClient{cc}
}

func (c *vMModulePublisherClient) PublishModule(ctx context.Context, in *VMPublishModule, opts ...grpc.CallOption) (*VMExecuteResponse, error) {
	out := new(VMExecuteResponse)
	err := c.cc.Invoke(ctx, "/vm_grpc.VMModulePublisher/PublishModule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VMModulePublisherServer is the server API for VMModulePublisher service.
type VMModulePublisherServer interface {
	PublishModule(context.Context, *VMPublishModule) (*VMExecuteResponse, error)
}

// UnimplementedVMModulePublisherServer can be embedded to have forward compatible implementations.
type UnimplementedVMModulePublisherServer struct {
}

func (*UnimplementedVMModulePublisherServer) PublishModule(ctx context.Context, req *VMPublishModule) (*VMExecuteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishModule not implemented")
}

func RegisterVMModulePublisherServer(s *grpc.Server, srv VMModulePublisherServer) {
	s.RegisterService(&_VMModulePublisher_serviceDesc, srv)
}

func _VMModulePublisher_PublishModule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMPublishModule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMModulePublisherServer).PublishModule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vm_grpc.VMModulePublisher/PublishModule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMModulePublisherServer).PublishModule(ctx, req.(*VMPublishModule))
	}
	return interceptor(ctx, in, info, handler)
}

var _VMModulePublisher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vm_grpc.VMModulePublisher",
	HandlerType: (*VMModulePublisherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishModule",
			Handler:    _VMModulePublisher_PublishModule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vm.proto",
}

// VMScriptExecutorClient is the client API for VMScriptExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VMScriptExecutorClient interface {
	ExecuteScript(ctx context.Context, in *VMExecuteScript, opts ...grpc.CallOption) (*VMExecuteResponse, error)
}

type vMScriptExecutorClient struct {
	cc grpc.ClientConnInterface
}

func NewVMScriptExecutorClient(cc grpc.ClientConnInterface) VMScriptExecutorClient {
	return &vMScriptExecutorClient{cc}
}

func (c *vMScriptExecutorClient) ExecuteScript(ctx context.Context, in *VMExecuteScript, opts ...grpc.CallOption) (*VMExecuteResponse, error) {
	out := new(VMExecuteResponse)
	err := c.cc.Invoke(ctx, "/vm_grpc.VMScriptExecutor/ExecuteScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VMScriptExecutorServer is the server API for VMScriptExecutor service.
type VMScriptExecutorServer interface {
	ExecuteScript(context.Context, *VMExecuteScript) (*VMExecuteResponse, error)
}

// UnimplementedVMScriptExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedVMScriptExecutorServer struct {
}

func (*UnimplementedVMScriptExecutorServer) ExecuteScript(ctx context.Context, req *VMExecuteScript) (*VMExecuteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteScript not implemented")
}

func RegisterVMScriptExecutorServer(s *grpc.Server, srv VMScriptExecutorServer) {
	s.RegisterService(&_VMScriptExecutor_serviceDesc, srv)
}

func _VMScriptExecutor_ExecuteScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMExecuteScript)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMScriptExecutorServer).ExecuteScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vm_grpc.VMScriptExecutor/ExecuteScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMScriptExecutorServer).ExecuteScript(ctx, req.(*VMExecuteScript))
	}
	return interceptor(ctx, in, info, handler)
}

var _VMScriptExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vm_grpc.VMScriptExecutor",
	HandlerType: (*VMScriptExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteScript",
			Handler:    _VMScriptExecutor_ExecuteScript_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vm.proto",
}
